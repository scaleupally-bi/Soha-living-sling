MERGE INTO payroll_report AS target
USING #payroll_report_temp AS source
ON target.userId = source.userId  and target.date = source.date and target.locationId = source.locationId and target.positionId = source.positionId
WHEN MATCHED THEN
    UPDATE SET
        target.userId = source.userId,
        target.date = source.date,
        target.locationId = source.locationId,
        target.positionId = source.positionId,
        target.actualHours = source.actualHours,
        target.actualHoursStr = source.actualHoursStr,
        target.status = source.status,
        target.actualHolidayHours = source.actualHolidayHours,
        target.actualHolidayHoursStr = source.actualHolidayHoursStr,
        target.actualHolidayCost = source.actualHolidayCost,
        target.actualHolidayCostStr = source.actualHolidayCostStr,
        target.actualSpreadOfHoursCost = source.actualSpreadOfHoursCost,
        target.actualSpreadOfHoursCostStr = source.actualSpreadOfHoursCostStr,
        target.isSalary = source.isSalary,
        target.isOnSalary = source.isOnSalary,
        target.ptoHours = source.ptoHours,
        target.ptoHoursStr = source.ptoHoursStr,
        target.ptoCost = source.ptoCost,
        target.ptoCostStr = source.ptoCostStr,
        target.premiumPayCost = source.premiumPayCost,
        target.actualOvertimeHours = source.actualOvertimeHours,
        target.actualOvertimeHoursStr = source.actualOvertimeHoursStr,
        target.actualOvertimeDoubleDailyHours = source.actualOvertimeDoubleDailyHours,
        target.actualOvertimeDoubleDailyHoursStr = source.actualOvertimeDoubleDailyHoursStr,
        target.actualOvertimeCost = source.actualOvertimeCost,
        target.actualOvertimeCostStr = source.actualOvertimeCostStr,
        target.actualHolidayOvertimeHours = source.actualHolidayOvertimeHours,
        target.actualHolidayOvertimeHoursStr = source.actualHolidayOvertimeHoursStr,
        target.actualHolidayOvertimeCost = source.actualHolidayOvertimeCost,
        target.actualHolidayOvertimeCostStr = source.actualHolidayOvertimeCostStr,
        target.shiftId = source.shiftId,
        target.shiftDuration = source.shiftDuration,
        target.shiftActualDuration = source.shiftActualDuration,
        target.shiftBreakDuration = source.shiftBreakDuration,
        target.shiftActualBreakDuration = source.shiftActualBreakDuration,
        target.wage = source.wage,
        target.wageStr = source.wageStr,
        target.actualWages = source.actualWages,
        target.actualWagesStr = source.actualWagesStr,
        target.ETLUpdatedAt =  GETDATE()
WHEN NOT MATCHED THEN
    INSERT (
        userId,
        date,
        locationId,
        positionId,
        actualHours,
        actualHoursStr,
        status,
        actualHolidayHours,
        actualHolidayHoursStr,
        actualHolidayCost,
        actualHolidayCostStr,
        actualSpreadOfHoursCost,
        actualSpreadOfHoursCostStr,
        isSalary,
        isOnSalary,
        ptoHours,
        ptoHoursStr,
        ptoCost,
        ptoCostStr,
        premiumPayCost,
        actualOvertimeHours,
        actualOvertimeHoursStr,
        actualOvertimeDoubleDailyHours,
        actualOvertimeDoubleDailyHoursStr,
        actualOvertimeCost,
        actualOvertimeCostStr,
        actualHolidayOvertimeHours,
        actualHolidayOvertimeHoursStr,
        actualHolidayOvertimeCost,
        actualHolidayOvertimeCostStr,
        shiftId,
        shiftDuration,
        shiftActualDuration,
        shiftBreakDuration,
        shiftActualBreakDuration,
        wage,
        wageStr,
        actualWages,
        actualWagesStr,
        ETLCreatedAt
    )
    VALUES (
        source.userId,
        source.date,
        source.locationId,
        source.positionId,
        source.actualHours,
        source.actualHoursStr,
        source.status,
        source.actualHolidayHours,
        source.actualHolidayHoursStr,
        source.actualHolidayCost,
        source.actualHolidayCostStr,
        source.actualSpreadOfHoursCost,
        source.actualSpreadOfHoursCostStr,
        source.isSalary,
        source.isOnSalary,
        source.ptoHours,
        source.ptoHoursStr,
        source.ptoCost,
        source.ptoCostStr,
        source.premiumPayCost,
        source.actualOvertimeHours,
        source.actualOvertimeHoursStr,
        source.actualOvertimeDoubleDailyHours,
        source.actualOvertimeDoubleDailyHoursStr,
        source.actualOvertimeCost,
        source.actualOvertimeCostStr,
        source.actualHolidayOvertimeHours,
        source.actualHolidayOvertimeHoursStr,
        source.actualHolidayOvertimeCost,
        source.actualHolidayOvertimeCostStr,
        source.shiftId,
        source.shiftDuration,
        source.shiftActualDuration,
        source.shiftBreakDuration,
        source.shiftActualBreakDuration,
        source.wage,
        source.wageStr,
        source.actualWages,
        source.actualWagesStr,
        GETDATE()
    );

